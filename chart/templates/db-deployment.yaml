# Copyright (c) 2020 Gitpod GmbH. All rights reserved.
# Licensed under the MIT License. See License-MIT.txt in the project root for license information.

{{ $comp := .Values.components.db }}
{{- $this := dict "root" . "gp" $.Values "comp" $comp -}}
{{- if $comp.gcloudSqlProxy.enabled -}}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ $comp.name }}
  labels:
    app: {{ template "gitpod.fullname" $ }}
    component: {{ $comp.name }}
    kind: deployment
    stage: {{ .Values.installation.stage }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: {{ template "gitpod.fullname" $ }}
      component: db
      kind: pod
      stage: {{ .Values.installation.stage }}
  template:
    metadata:
      name: db
      labels:
        app: {{ template "gitpod.fullname" $ }}
        component: db
        kind: pod
        stage: {{ .Values.installation.stage }}
    spec:
{{ include "gitpod.pod.affinity" $this | indent 6 }}
      serviceAccountName: db
      containers:
      - name: cloud-sql-proxy
        securityContext:
          privileged: false
          runAsNonRoot: false
        image: b.gcr.io/cloudsql-docker/gce-proxy:1.11
        command:
        - /cloud_sql_proxy
        - -dir=/cloudsql
        - -instances={{ $comp.gcloudSqlProxy.instance }}=tcp:0.0.0.0:3306
        - -credential_file=/credentials/credentials.json
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /cloudsql
          name: cloudsql
        - mountPath: /credentials
          name: gcloud-sql-token
      volumes:
      - emptyDir: {}
        name: cloudsql
      - name: gcloud-sql-token
        secret:
          secretName: gcloud-sql-token
{{ toYaml .Values.defaults | indent 6 }}
{{- end }}
<<<<<<< HEAD
=======

{{- if $.Values.mysql.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: db
  labels:
    app: {{ template "gitpod.fullname" $ }}
    component: {{ $comp.name }}
    kind: deployment
    stage: {{ .Values.installation.stage }}
spec:
  selector:
    matchLabels:
      app: {{ template "gitpod.fullname" $ }}
      component: db
      kind: pod
      stage: {{ .Values.installation.stage }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "gitpod.fullname" $ }}
        component: db
        kind: pod
        stage: {{ .Values.installation.stage }}
    spec:
      containers:
      - image: mysql:5.7
        name: db
        args: ["--ignore-db-dir=lost+found"]
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-password
              key: mysql-root-password
        - name: MYSQL_USER
          value: gitpod
        - name: MYSQL_PASSWORD
          value: {{ .Values.db.password }}
        - name: MYSQL_DATABASE
          value: gitpod
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
        - name: init
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: db-pvc
      - name: init
        configMap:
          name: db-init-scripts
{{- end }}
>>>>>>> 7e4e4807 (dev)
